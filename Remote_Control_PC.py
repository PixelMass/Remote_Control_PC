import telebot
import os
import webbrowser
import requests
import platform
import ctypes
import mouse
import PIL.ImageGrab
import cv2
import time
from telebot import TeleBot
from PIL import Image, ImageGrab, ImageDraw
from pySmartDL import SmartDL
from telebot import types
from telebot import apihelper
from pynput.keyboard import Key, Controller


my_id = 381674729
bot_token = '8125378502:AAEXbmTNbpfDdd-wIuRX9_XKGJN4ixgyg4o'
bot = telebot.TeleBot(bot_token)

class User:
	def __init__(self):
		keys = ['urldown', 'fin', 'curs']

		for key in keys:
			self.key = None

User.curs = 50
keyboard = Controller()



##–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –º–µ–Ω—é
menu_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=False)
btnscreen = types.KeyboardButton('üì∑–®–≤–∏–¥–∫–∏–π —Å–∫—Ä—ñ–Ω—à–æ—Ç')
btnwebcam = types.KeyboardButton('üìπ–§–æ—Ç–æ –≤–µ–±–∫–∞–º–µ—Ä–∏')
btnmusic = types.KeyboardButton('‚ô™ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º—É–∑–∏–∫–æ—é')
btnmouse = types.KeyboardButton('üñ±–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–∏—à–∫–æ—é')
btnfiles = types.KeyboardButton('üìÇ–§–∞–π–ª–∏ —Ç–∞ –ø—Ä–æ—Ü–µ—Å–∏')
btnaddit = types.KeyboardButton('‚ùáÔ∏è–î–æ–¥–∞—Ç–∫–æ–≤–æ')
btnmsgbox = types.KeyboardButton('üì©–ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è')
btninfo = types.KeyboardButton('‚ùóÔ∏è–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è')
menu_keyboard.row(btnscreen, btnwebcam)
menu_keyboard.row(btnmouse, btnmusic)
menu_keyboard.row(btnfiles, btnaddit)
menu_keyboard.row(btninfo, btnmsgbox)

#–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –º—É–∑–∏–∫–∞
music_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=False)
btnmpp = types.KeyboardButton('‚èØÔ∏è')
btnmback = types.KeyboardButton('‚¨ÖÔ∏è')
btnmnext = types.KeyboardButton('‚û°Ô∏è')
btnmvoldown = types.KeyboardButton('‚¨áÔ∏è')
btnmvolup = types.KeyboardButton('‚¨ÜÔ∏è')
btnmvolpro = types.KeyboardButton('–í–∏–±—ñ—Ä –≥—É—á–Ω–æ—Å—Ç—ñ')
btnback = types.KeyboardButton('‚è™–ù–∞–∑–∞–¥‚è™')
music_keyboard.row(btnmpp)
music_keyboard.row(btnmback, btnmnext)
music_keyboard.row(btnmvoldown, btnmvolup)
music_keyboard.row(btnmvolpro, btnback)

#–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –≥—É—á–Ω–æ—Å—Ç—ñ
vol_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=False)
btnvol1 = types.KeyboardButton('0%')
btnvol2 = types.KeyboardButton('10%')
btnvol3 = types.KeyboardButton('20%')
btnvol4 = types.KeyboardButton('30%')
btnvol5 = types.KeyboardButton('40%')
btnvol6 = types.KeyboardButton('50%')
btnvol7 = types.KeyboardButton('60%')
btnvol8 = types.KeyboardButton('70%')
btnvol9 = types.KeyboardButton('80%')
btnvol10 = types.KeyboardButton('90%')
btnvol11 = types.KeyboardButton('100%')
btnback = types.KeyboardButton('‚è™–ù–∞–∑–∞–¥‚è™')
vol_keyboard.row(btnvol1, btnvol2, btnvol3)
vol_keyboard.row(btnvol4, btnvol5, btnvol6)
vol_keyboard.row(btnvol7, btnvol8, btnvol9)
vol_keyboard.row(btnvol10, btnvol11, btnback)



#–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –§–∞–π–ª–∏ —Ç–∞ –ø—Ä–æ—Ü–µ—Å–∏
files_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=False)
btnstart = types.KeyboardButton('‚úîÔ∏è–ó–∞–ø—É—Å—Ç–∏—Ç–∏')
btnkill = types.KeyboardButton('‚ùå–í–∏–º–∫–Ω—É—Ç–∏ –ø—Ä–æ—Ü–µ—Å')
btndown = types.KeyboardButton('‚¨áÔ∏è–°–∫–∞—á–∞—Ç–∏ —Ñ–∞–π–ª')
btnupl = types.KeyboardButton('‚¨ÜÔ∏è–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª')
btnurldown = types.KeyboardButton('üîó–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º')
btnback = types.KeyboardButton('‚è™–ù–∞–∑–∞–¥‚è™')
files_keyboard.row(btnstart,  btnkill)
files_keyboard.row(btndown, btnupl)
files_keyboard.row(btnurldown, btnback)


#–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–æ–¥–∞—Ç–∫–æ–≤–æ
additionals_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=False)
btnweb = types.KeyboardButton('üîó–ü–µ—Ä–µ–π—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º')
btncmd = types.KeyboardButton('‚úÖ–í–∏–∫–æ–Ω–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É')
btnoff = types.KeyboardButton("‚õîÔ∏è–í–∏–º–∫–Ω—É—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä")
btnreb = types.KeyboardButton("‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä")
btninfo = types.KeyboardButton("üñ•–ü—Ä–æ –∫–æ–º–ø'—é—Ç–µ—Ä")
btnlock = types.KeyboardButton("üîí–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä")
btnback = types.KeyboardButton('‚è™–ù–∞–∑–∞–¥‚è™')
additionals_keyboard.row(btnoff, btnreb)
additionals_keyboard.row(btnlock, btnweb)
additionals_keyboard.row(btncmd, btninfo)
additionals_keyboard.row(btnback)


#–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –º–∏—à–∞
mouse_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
btnup = types.KeyboardButton('‚¨ÜÔ∏è')
btndown = types.KeyboardButton('‚¨áÔ∏è')
btnleft = types.KeyboardButton('‚¨ÖÔ∏è')
btnright = types.KeyboardButton('‚û°Ô∏è')
btnclick = types.KeyboardButton('üÜó')
btnback = types.KeyboardButton('‚è™–ù–∞–∑–∞–¥‚è™')
btncurs = types.KeyboardButton('–í–∫–∞–∑–∞—Ç–∏ —Ä–æ–∑–º–∞—Ö –∫—É—Ä—Å–æ—Ä—É')
mouse_keyboard.row(btnup)
mouse_keyboard.row(btnleft, btnclick, btnright)
mouse_keyboard.row(btndown)
mouse_keyboard.row(btnback, btncurs)


info_msg = '''
*–ü—Ä–æ –∫–æ–º–∞–Ω–¥–∏*
_üì∑–®–≤–∏–¥–∫–∏–π —Å–∫—Ä—ñ–Ω—à–æ—Ç_ - –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î —Å–∫—Ä—ñ–Ω—à–æ—Ç –µ–∫—Ä–∞–Ω—É
_üìπ–§–æ—Ç–æ –≤–µ–±–∫–∞–º–µ—Ä–∏_ - –Ω–∞–¥—Å–∏–ª–∞—î —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –∑ –≤–µ–±–∫–∞–º–µ—Ä–∏
_üñ±–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–∏—à–∫–æ—é_ - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å —É –º–µ–Ω—é —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–∏—à–∫–æ—é
_‚ô™ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º—É–∑–∏–∫–æ—é_ - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å —É –º–µ–Ω—é —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º—É–∑–∏–∫–æ—é —Ç–∞ –≥—É—á–Ω—ñ—Å—Ç—é
_üìÇ–§–∞–π–ª–∏ —Ç–∞ –ø—Ä–æ—Ü–µ—Å–∏_ - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å —É –º–µ–Ω—é –∑ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è–º —Ñ–∞–π–ª—ñ–≤ —Ç–∞ –ø—Ä–æ—Ü–µ—Å—ñ–≤
_‚ùáÔ∏è–î–æ–¥–∞—Ç–∫–æ–≤–æ_ - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å —É –º–µ–Ω—é –∑ –¥–æ–¥. —Ñ—É–Ω–∫—Ü—ñ—è–º–∏
_üì©–ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è_ - –Ω–∞–¥—ñ—à–ª–µ –Ω–∞ –ü–ö –≤—ñ–∫–Ω–æ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º(msgbox)
_‚è™–ù–∞–∑–∞–¥‚è™_ - –ø–æ–≤–µ—Ä—Ç–∞—î –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é

_üîó–ü–µ—Ä–µ–π—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º_ - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º (–≤–∞–∂–ª–∏–≤–æ –≤–∫–∞–∑–∞—Ç–∏ "http://" –∞–±–æ "https://" –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –±—Ä–∞—É–∑–µ—Ä—ñ, –∞ –Ω–µ IE)
_‚úÖ–í–∏–∫–æ–Ω–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É_ - –≤–∏–∫–æ–Ω—É—î –≤ cmd –±—É–¥—å-—è–∫—É –≤–∫–∞–∑–∞–Ω—É –∫–æ–º–∞–Ω–¥—É
_‚õîÔ∏è–í–∏–º–∫–Ω—É—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä_ - –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –≤–∏–º–∏–∫–∞—î –∫–æ–º–ø'—é—Ç–µ—Ä
_‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä_ - –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î –∫–æ–º–ø'—é—Ç–µ—Ä
_üîí–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä_ - –±–ª–æ–∫—É—î –ø–æ—Ç–æ—á–Ω—É —Å–µ—Å—ñ—é Windows
_üñ•–ü—Ä–æ –∫–æ–º–ø'—é—Ç–µ—Ä_ - –ø–æ–∫–∞–∑—É—î —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, ip, –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω—É —Å–∏—Å—Ç–µ–º—É —Ç–∞ –ø—Ä–æ—Ü–µ—Å–æ—Ä

_‚ùå–í–∏–º–∫–Ω—É—Ç–∏ –ø—Ä–æ—Ü–µ—Å_ - –∑–∞–≤–µ—Ä—à—É—î –±—É–¥—å-—è–∫–∏–π –ø—Ä–æ—Ü–µ—Å
_‚úîÔ∏è–ó–∞–ø—É—Å—Ç–∏—Ç–∏_ - –≤—ñ–¥–∫—Ä–∏–≤–∞—î –±—É–¥—å-—è–∫—ñ —Ñ–∞–π–ª–∏ (—É —Ç–æ–º—É —á–∏—Å–ª—ñ —ñ exe)
_‚¨áÔ∏è–°–∫–∞—á–∞—Ç–∏ —Ñ–∞–π–ª_ - –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î –≤–∫–∞–∑–∞–Ω–∏–π —Ñ–∞–π–ª –∑ –≤–∞—à–æ–≥–æ –∫–æ–º–ø'—é—Ç–µ—Ä–∞
_‚¨ÜÔ∏è–°–∫–∞—á–∞—Ç–∏ —Ñ–∞–π–ª_ - –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î —Ñ–∞–π–ª –Ω–∞ –≤–∞—à –∫–æ–º–ø'—é—Ç–µ—Ä
_üîó–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º_ - –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î —Ñ–∞–π–ª –Ω–∞ –≤–∞—à –∫–æ–º–ø'—é—Ç–µ—Ä –∑–∞ –ø—Ä—è–º–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º
'''

MessageBox = ctypes.windll.user32.MessageBoxW
if os.path.exists("msg.pt"):
	pass
else:
	bot.send_message(my_id, "–î–æ–±—Ä–æ–≥–æ –¥–Ω—è, —Ü–µ–π –±–æ—Ç –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –≤—ñ–¥–¥–∞–ª–µ–Ω–æ–≥–æ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–æ–º–ø'—é—Ç–µ—Ä–æ–º!\n–°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –≤—Å–µ —É –º–µ–Ω—é \"‚ùóÔ∏è–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è\"\n", parse_mode = "markdown")
	MessageBox(None, f"–ù–∞ –ü–ö –∑–∞–ø—É—â–µ–Ω–æ –ø—Ä–æ–≥—Ä–∞–º—É Remote Control PC –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–æ–º–ø'—é—Ç–µ—Ä–æ–º\n–¶–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —î —Ä–∞–∑–æ–≤–∏–º", '!–£–í–ê–ì–ê!', 0)
	f = open('msg.pt', 'tw', encoding='utf-8')
	f.close

bot.send_message(my_id, "–ü–ö –∑–∞–ø—É—â–µ–Ω–∏–π", reply_markup = menu_keyboard)

bot.send_chat_action(my_id, 'upload_photo')
try:
    cap = cv2.VideoCapture(0)
    ret, frame = cap.read()
    cv2.imwrite('webcam.png', frame)
    cap.release()
    bot.send_photo(my_id, open("webcam.png", "rb"))
    os.remove("webcam.png")
except Exception as e:
    bot.send_message(my_id, f"–ö–æ–º–ø'—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ: {e}")

@bot.message_handler(content_types=["text"])
def get_text_messages(message):
    if message.from_user.id == my_id:
        if message.text == "üì∑–®–≤–∏–¥–∫–∏–π —Å–∫—Ä—ñ–Ω—à–æ—Ç":
            start_time = time.time()  # –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
            bot.send_chat_action(my_id, 'upload_photo')
            try:
                get_screenshot()
                bot.send_photo(my_id, open("screen_with_mouse.png", "rb"))
                os.remove("screen.png")
                os.remove("screen_with_mouse.png")
            except Exception as e:
                bot.send_message(my_id, f"–ö–æ–º–ø'—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ: {e}")
            end_time = time.time()  # –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'üì∑–®–≤–∏–¥–∫–∏–π —Å–∫—Ä—ñ–Ω—à–æ—Ç': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "üìπ–§–æ—Ç–æ –≤–µ–±–∫–∞–º–µ—Ä–∏":
            start_time = time.time()
            bot.send_chat_action(my_id, 'upload_photo')
            try:
                cap = cv2.VideoCapture(0)
                ret, frame = cap.read()
                cv2.imwrite('webcam.png', frame)
                cap.release()
                bot.send_photo(my_id, open("webcam.png", "rb"))
                os.remove("webcam.png")
            except Exception as e:
                bot.send_message(my_id, f"–ö–æ–º–ø'—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ: {e}")
            end_time = time.time()
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'üìπ–§–æ—Ç–æ –≤–µ–±–∫–∞–º–µ—Ä–∏': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "‚ô™ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º—É–∑–∏–∫–æ—é":
            start_time = time.time()
            bot.send_message(my_id, "‚ô™ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º—É–∑–∏–∫–æ—é", reply_markup=music_keyboard)
            bot.register_next_step_handler(message, music_process)
            end_time = time.time()
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚ô™ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º—É–∑–∏–∫–æ—é': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "–í–∏–±—ñ—Ä –≥—É—á–Ω–æ—Å—Ç—ñ":
            start_time = time.time()
            bot.send_message(my_id, "–í–∏–±—ñ—Ä –≥—É—á–Ω–æ—Å—Ç—ñ", reply_markup=vol_keyboard)
            bot.register_next_step_handler(message, vol_process)
            end_time = time.time()
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '–í–∏–±—ñ—Ä –≥—É—á–Ω–æ—Å—Ç—ñ': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "üñ±–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–∏—à–∫–æ—é":
            start_time = time.time()
            bot.send_message(my_id, "üñ±–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–∏—à–∫–æ—é", reply_markup=mouse_keyboard)
            bot.register_next_step_handler(message, mouse_process)
            end_time = time.time()
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'üñ±–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–∏—à–∫–æ—é': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
            start_time = time.time()
            back(message)
            end_time = time.time()
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚è™–ù–∞–∑–∞–¥‚è™': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "üìÇ–§–∞–π–ª–∏ —Ç–∞ –ø—Ä–æ—Ü–µ—Å–∏":
            start_time = time.time()
            bot.send_message(my_id, "üìÇ–§–∞–π–ª–∏ —Ç–∞ –ø—Ä–æ—Ü–µ—Å–∏", reply_markup=files_keyboard)
            bot.register_next_step_handler(message, files_process)
            end_time = time.time()
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'üìÇ–§–∞–π–ª–∏ —Ç–∞ –ø—Ä–æ—Ü–µ—Å–∏': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "‚ùáÔ∏è–î–æ–¥–∞—Ç–∫–æ–≤–æ":
            start_time = time.time()
            bot.send_message(my_id, "‚ùáÔ∏è–î–æ–¥–∞—Ç–∫–æ–≤–æ", reply_markup=additionals_keyboard)
            bot.register_next_step_handler(message, addons_process)
            end_time = time.time()
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚ùáÔ∏è–î–æ–¥–∞—Ç–∫–æ–≤–æ': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "üì©–ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è":
            start_time = time.time()
            bot.send_message(my_id, "–í–∫–∞–∂—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:")
            bot.register_next_step_handler(message, messaga_process)
            end_time = time.time()
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'üì©–ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "‚ùóÔ∏è–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è":
            start_time = time.time()
            bot.send_message(my_id, info_msg, parse_mode="markdown")
            end_time = time.time()
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚ùóÔ∏è–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

        else:
            pass
    else:
        info_user(message)



def addons_process(message):
    if message.from_user.id == my_id:
        start_time = time.time()
        bot.send_chat_action(my_id, 'typing')
        
        if message.text == "üîó–ü–µ—Ä–µ–π—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º":
            action_start_time = time.time() 
            bot.send_message(my_id, "–í–∫–∞–∂—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è: ")
            bot.register_next_step_handler(message, web_process)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'üîó–ü–µ—Ä–µ–π—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "‚úÖ–í–∏–∫–æ–Ω–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É":
            action_start_time = time.time()
            bot.send_message(my_id, "–í–∫–∞–∂—ñ—Ç—å –∫–æ–Ω—Å–æ–ª—å–Ω—É –∫–æ–º–∞–Ω–¥—É: ")
            bot.register_next_step_handler(message, cmd_process)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚úÖ–í–∏–∫–æ–Ω–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "‚õîÔ∏è–í–∏–º–∫–Ω—É—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä":
            action_start_time = time.time() 
            bot.send_message(my_id, "–í–∏–º–∫–Ω–µ–Ω–Ω—è –∫–æ–º–ø'—é—Ç–µ—Ä–∞...")
            os.system('shutdown -s /t 0 /f')
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚õîÔ∏è–í–∏–º–∫–Ω—É—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
            bot.register_next_step_handler(message, addons_process)

        elif message.text == "‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä":
            action_start_time = time.time()
            bot.send_message(my_id, "–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–º–ø'—é—Ç–µ—Ä–∞...")
            os.system('shutdown -r /t 0 /f')
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
            bot.register_next_step_handler(message, addons_process)

        elif message.text == "üîí–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä":
            action_start_time = time.time()
            bot.send_message(my_id, "–ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –∫–æ–º–ø'—é—Ç–µ—Ä–∞...")
            ctypes.windll.user32.LockWorkStation()
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'üîí–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
            bot.register_next_step_handler(message, addons_process)

        elif message.text == "üñ•–ü—Ä–æ –∫–æ–º–ø'—é—Ç–µ—Ä":
            action_start_time = time.time()
            req = requests.get('https://api.ipify.org')
            ip = req.text
            uname = os.getlogin()
            windows = platform.platform()
            processor = platform.processor()
            bot.send_message(my_id, f"*–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:* {uname}\n*IP:* {ip}\n*–û–°:* {windows}\n*–ü—Ä–æ—Ü–µ—Å–æ—Ä:* {processor}", parse_mode = "markdown")
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'üñ•–ü—Ä–æ –∫–æ–º–ø'—é—Ç–µ—Ä': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
            bot.register_next_step_handler(message, addons_process)

        elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
            action_start_time = time.time()
            back(message)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚è™–ù–∞–∑–∞–¥‚è™': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
        
        else:
            action_start_time = time.time()
            pass
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'default': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")

        end_time = time.time()  
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'addons_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
        
    else:
        info_user(message)


def files_process(message):
	if message.from_user.id == my_id:
		bot.send_chat_action(my_id, 'typing')
		if message.text == "‚ùå–í–∏–º–∫–Ω—É—Ç–∏ –ø—Ä–æ—Ü–µ—Å":	
			bot.send_message(my_id, "–í–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É –ø—Ä–æ—Ü–µ—Å—É: ")
			bot.register_next_step_handler(message, kill_process)

		elif message.text == "‚úîÔ∏è–ó–∞–ø—É—Å—Ç–∏—Ç–∏":
			bot.send_message(my_id, "–í–∫–∞–∂—ñ—Ç—å —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É: ")
			bot.register_next_step_handler(message, start_process)

		elif message.text == "‚¨áÔ∏è–°–∫–∞—á–∞—Ç–∏ —Ñ–∞–π–ª":
			bot.send_message(my_id, "–í–∫–∞–∂—ñ—Ç—å —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É: ")
			bot.register_next_step_handler(message, downfile_process)

		elif message.text == "‚¨ÜÔ∏è–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª":
			bot.send_message(my_id, "–ù–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–π —Ñ–∞–π–ª")
			bot.register_next_step_handler(message, uploadfile_process)

		elif message.text == "üîó–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º":
			bot.send_message(my_id, "–í–∫–∞–∂—ñ—Ç—å –ø—Ä—è–º–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:")
			bot.register_next_step_handler(message, uploadurl_process)

		elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
			back(message)
		else:
			pass
	else:
		info_user(message)


def music_process(message):
    if message.from_user.id == my_id:
        start_time = time.time()  
        
        if message.text == "‚¨ÖÔ∏è":
            action_start_time = time.time()
            keyboard.press(Key.media_previous)
            keyboard.release(Key.media_previous)
            bot.send_message(my_id, "–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç—Ä–µ–∫", reply_markup=music_keyboard)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚¨ÖÔ∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç—Ä–µ–∫': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
            bot.register_next_step_handler(message, music_process)

        elif message.text == "‚û°Ô∏è":
            action_start_time = time.time()
            keyboard.press(Key.media_next)
            keyboard.release(Key.media_next)
            bot.send_message(my_id, "–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ç—Ä–µ–∫", reply_markup=music_keyboard)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚û°Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ç—Ä–µ–∫': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
            bot.register_next_step_handler(message, music_process)

        elif message.text == "‚¨ÜÔ∏è":
            action_start_time = time.time()
            keyboard.press(Key.media_volume_up)
            keyboard.release(Key.media_volume_up)
            bot.send_message(my_id, "–ì—É—á–Ω—ñ—Å—Ç—å –∑–±—ñ–ª—å—à–µ–Ω–∞", reply_markup=music_keyboard)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚¨ÜÔ∏è –ì—É—á–Ω—ñ—Å—Ç—å –∑–±—ñ–ª—å—à–µ–Ω–∞': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
            bot.register_next_step_handler(message, music_process)

        elif message.text == "‚¨áÔ∏è":
            action_start_time = time.time()
            keyboard.press(Key.media_volume_down)
            keyboard.release(Key.media_volume_down)
            bot.send_message(my_id, "–ì—É—á–Ω—ñ—Å—Ç—å –∑–º–µ–Ω—à–µ–Ω–∞", reply_markup=music_keyboard)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚¨áÔ∏è –ì—É—á–Ω—ñ—Å—Ç—å –∑–º–µ–Ω—à–µ–Ω–∞': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
            bot.register_next_step_handler(message, music_process)

        elif message.text == "–í–∏–±—ñ—Ä –≥—É—á–Ω–æ—Å—Ç—ñ":
            action_start_time = time.time()
            bot.send_message(my_id, "–í–∏–±–µ—Ä—ñ—Ç—å —Ä—ñ–≤–µ–Ω—å –≥—É—á–Ω–æ—Å—Ç—ñ", reply_markup=vol_keyboard)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '–í–∏–±—ñ—Ä –≥—É—á–Ω–æ—Å—Ç—ñ': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
            bot.register_next_step_handler(message, vol_process)

        elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
            action_start_time = time.time()
            back(message)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚è™–ù–∞–∑–∞–¥‚è™': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "‚èØÔ∏è":
            action_start_time = time.time()
            keyboard.press(Key.media_play_pause)
            keyboard.release(Key.media_play_pause)
            bot.send_message(my_id, "–¢—Ä–µ–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–∞—É–∑—É/–≤—ñ–¥—Ç–≤–æ—Ä—é—î—Ç—å—Å—è", reply_markup=music_keyboard)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚èØÔ∏è –¢—Ä–µ–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–∞—É–∑—É/–≤—ñ–¥—Ç–≤–æ—Ä—é—î—Ç—å—Å—è': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
            bot.register_next_step_handler(message, music_process)

        else:
            action_start_time = time.time()
            bot.send_message(my_id, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–∞", reply_markup=music_keyboard)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–∞': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
            bot.register_next_step_handler(message, music_process)
        
        end_time = time.time()
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'music_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
        
    else:
        info_user(message)


def vol_process(message):
    if message.from_user.id == my_id:
        start_time = time.time()  

        try:
            if message.text.endswith("%"):
                action_start_time = time.time()
                volume_level = int(message.text.strip('%'))
                set_system_volume(volume_level)
                action_end_time = time.time() 
                print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'set_system_volume({volume_level})': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
                
                bot.send_message(my_id, f"–ì—É—á–Ω—ñ—Å—Ç—å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚Äã‚Äã–Ω–∞ {volume_level}%", reply_markup=vol_keyboard)
                bot.register_next_step_handler(message, vol_process)

            elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
                action_start_time = time.time()
                bot.send_message(my_id, "–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –º–µ–Ω—é –∫–µ—Ä—É–≤–∞–Ω–Ω—è –º—É–∑–∏–∫–æ—é", reply_markup=music_keyboard)
                action_end_time = time.time() 
                print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '–ù–∞–∑–∞–¥': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
                
                bot.register_next_step_handler(message, music_process)

            else:
                action_start_time = time.time()
                bot.send_message(my_id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä. –í–∏–±–µ—Ä—ñ—Ç—å —Ä—ñ–≤–µ–Ω—å –≥—É—á–Ω–æ—Å—Ç—ñ —ñ–∑ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∏—Ö –æ–ø—Ü—ñ–π.", reply_markup=vol_keyboard)
                action_end_time = time.time() 
                print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
                
                bot.register_next_step_handler(message, vol_process)

        except ValueError:
            action_start_time = time.time()
            bot.send_message(my_id, "–ü–æ–º–∏–ª–∫–∞ –≥—É—á–Ω–æ—Å—Ç—ñ. –í–∫–∞–∂—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥ 0 –¥–æ 100.", reply_markup=vol_keyboard)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '–ü–æ–º–∏–ª–∫–∞ –≥—É—á–Ω–æ—Å—Ç—ñ': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
            
            bot.register_next_step_handler(message, vol_process)

        end_time = time.time()
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'vol_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
        
    else:
        info_user(message)

def set_system_volume(level):
    """–í—Å—Ç–∞–Ω–æ–≤–ª—é—î –≥—É—á–Ω—ñ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∏ (–≤—ñ–¥ 0 –¥–æ 100)"""
    from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume
    from comtypes import CLSCTX_ALL
    from ctypes import cast, POINTER, windll

    start_time = time.time()  

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è COM
    windll.ole32.CoInitialize(None)

    try:
        action_start_time = time.time()
        devices = AudioUtilities.GetSpeakers()
        interface = devices.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
        volume = cast(interface, POINTER(IAudioEndpointVolume))

        # –£—Ä–æ–≤–µ–Ω—å –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –∑–∞–¥–∞–µ—Ç—Å—è –æ—Ç 0.0 –¥–æ 1.0
        volume.SetMasterVolumeLevelScalar(level / 100.0, None)
        action_end_time = time.time() 
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'volume.SetMasterVolumeLevelScalar': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")

    finally:
        # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ COM
        windll.ole32.CoUninitialize()

    end_time = time.time()
    print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'set_system_volume': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")


def mouse_process(message):
    if message.from_user.id == my_id:
        start_time = time.time()  

        if message.text == "‚¨ÜÔ∏è":
            action_start_time = time.time()
            currentMouseX, currentMouseY = mouse.get_position()
            mouse.move(currentMouseX, currentMouseY - User.curs)
            screen_process(message)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚¨ÜÔ∏è': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "‚¨áÔ∏è":
            action_start_time = time.time()
            currentMouseX, currentMouseY = mouse.get_position()
            mouse.move(currentMouseX, currentMouseY + User.curs)
            screen_process(message)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚¨áÔ∏è': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "‚¨ÖÔ∏è":
            action_start_time = time.time()
            currentMouseX, currentMouseY = mouse.get_position()
            mouse.move(currentMouseX - User.curs, currentMouseY)
            screen_process(message)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚¨ÖÔ∏è': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "‚û°Ô∏è":
            action_start_time = time.time()
            currentMouseX, currentMouseY = mouse.get_position()
            mouse.move(currentMouseX + User.curs, currentMouseY)
            screen_process(message)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '‚û°Ô∏è': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "üÜó":
            action_start_time = time.time()
            mouse.click()
            screen_process(message)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'üÜó': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "–í–∫–∞–∑–∞—Ç–∏ —Ä–æ–∑–º–∞—Ö –∫—É—Ä—Å–æ—Ä—É":
            action_start_time = time.time()
            bot.send_chat_action(my_id, 'typing')
            bot.send_message(my_id, f"–í–∫–∞–∂—ñ—Ç—å —Ä–æ–∑–º–∞—Ö, –Ω–∞ –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç —Ä–æ–∑–º–∞—Ö {str(User.curs)}px", reply_markup=mouse_keyboard)
            bot.register_next_step_handler(message, mousecurs_settings)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '–í–∫–∞–∑–∞—Ç–∏ —Ä–æ–∑–º–∞—Ö –∫—É—Ä—Å–æ—Ä—É': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")

        elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
            action_start_time = time.time()
            back(message)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '–ù–∞–∑–∞–¥': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")

        else:
            pass

        end_time = time.time()
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'mouse_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

    else:
        info_user(message)


def back(message):
    start_time = time.time()  
    bot.register_next_step_handler(message, get_text_messages)
    bot.send_message(my_id, "–í–∏ —É –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é", reply_markup=menu_keyboard)
    end_time = time.time()
    print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'back': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")


def info_user(message):
    start_time = time.time()  
    bot.send_chat_action(my_id, 'typing')
    alert = f"–•—Ç–æ—Å—å –Ω–∞–º–∞–≥–∞–≤—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∫–æ–º–∞–Ω–¥—É: \"{message.text}\"\n\n"
    alert += f"user id: {str(message.from_user.id)}\n"
    alert += f"first name: {str(message.from_user.first_name)}\n"
    alert += f"last name: {str(message.from_user.last_name)}\n"
    alert += f"username: @{str(message.from_user.username)}"
    bot.send_message(my_id, alert, reply_markup=menu_keyboard)
    end_time = time.time()
    print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'info_user': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def kill_process(message):
    start_time = time.time()  
    bot.send_chat_action(my_id, 'typing')
    try:
        action_start_time = time.time()
        os.system("taskkill /IM " + message.text + ".exe -F")
        action_end_time = time.time() 
        bot.send_message(my_id, f"–ü—Ä–æ—Ü–µ—Å \"{message.text}\" –≤–∏–º–∫–Ω–µ–Ω–∏–π", reply_markup=files_keyboard)
        bot.register_next_step_handler(message, files_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'kill_process': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        action_end_time = time.time()
        bot.send_message(my_id, "–ü–æ–º–∏–ª–∫–∞! –ü—Ä–æ—Ü–µ—Å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ", reply_markup=files_keyboard)
        bot.register_next_step_handler(message, files_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'kill_process' —Å –æ—à–∏–±–∫–æ–π: {action_end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

    end_time = time.time()
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'kill_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def start_process(message):
    start_time = time.time()  
    bot.send_chat_action(my_id, 'typing')
    try:
        action_start_time = time.time()
        os.startfile(r'' + message.text)
        action_end_time = time.time() 
        bot.send_message(my_id, f"–§–∞–π–ª –ø–æ –¥–æ—Ä–æ–∑—ñ \"{message.text}\" –∑–∞–ø—É—Å—Ç–∏–≤—Å—è", reply_markup=files_keyboard)
        bot.register_next_step_handler(message, files_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'start_process': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        action_end_time = time.time()
        bot.send_message(my_id, "–ü–æ–º–∏–ª–∫–∞! –í–∫–∞–∑–∞–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–∞–π–ª", reply_markup=files_keyboard)
        bot.register_next_step_handler(message, files_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'start_process' —Å –æ—à–∏–±–∫–æ–π: {action_end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

    end_time = time.time()
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'start_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def web_process(message):
    start_time = time.time()  
    bot.send_chat_action(my_id, 'typing')
    try:
        action_start_time = time.time()
        webbrowser.open(message.text, new=0)
        action_end_time = time.time() 
        bot.send_message(my_id, f"–ü–µ—Ä–µ—Ö—ñ–¥ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º \"{message.text}\" –∑–¥—ñ–π—Å–Ω–µ–Ω–∏–π", reply_markup=additionals_keyboard)
        bot.register_next_step_handler(message, addons_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'web_process': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        action_end_time = time.time()
        bot.send_message(my_id, "–ü–æ–º–∏–ª–∫–∞! –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ", reply_markup=additionals_keyboard)
        bot.register_next_step_handler(message, addons_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'web_process' —Å –æ—à–∏–±–∫–æ–π: {action_end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

    end_time = time.time()
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'web_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def cmd_process(message):
    start_time = time.time()  
    bot.send_chat_action(my_id, 'typing')
    try:
        action_start_time = time.time()
        os.system(message.text)
        action_end_time = time.time() 
        bot.send_message(my_id, f"–ö–æ–º–∞–Ω–¥–∞ \"{message.text}\" –≤–∏–∫–æ–Ω–∞–Ω–∞", reply_markup=additionals_keyboard)
        bot.register_next_step_handler(message, addons_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'cmd_process': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        action_end_time = time.time()
        bot.send_message(my_id, "–ü–æ–º–∏–ª–∫–∞! –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞", reply_markup=additionals_keyboard)
        bot.register_next_step_handler(message, addons_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'cmd_process' —Å –æ—à–∏–±–∫–æ–π: {action_end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

    end_time = time.time()
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'cmd_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def say_process(message):
    start_time = time.time()  
    bot.send_chat_action(my_id, 'typing')
    bot.send_message(my_id, "–£ —Ä–æ–∑—Ä–æ–±—Ü—ñ...", reply_markup=menu_keyboard)
    end_time = time.time()
    print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'say_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def downfile_process(message):
    start_time = time.time()  
    bot.send_chat_action(my_id, 'typing')
    try:
        action_start_time = time.time()
        file_path = message.text
        if os.path.exists(file_path):
            bot.send_message(my_id, "–§–∞–π–ª –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è, –∑–∞—á–µ–∫–∞–π—Ç–µ...")
            bot.send_chat_action(my_id, 'upload_document')
            file_doc = open(file_path, 'rb')
            bot.send_document(my_id, file_doc)
            bot.register_next_step_handler(message, files_process)
            action_end_time = time.time() 
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'downfile_process': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
        else:
            action_end_time = time.time() 
            bot.send_message(my_id, "–§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –≤–∫–∞–∑–∞–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —à–ª—è—Ö (–ü–†.: C:\\Documents\\File.doc)")
            bot.register_next_step_handler(message, files_process)
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'downfile_process' —Å –æ—à–∏–±–∫–æ–π: {action_end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        action_end_time = time.time()
        bot.send_message(my_id, "–ü–æ–º–∏–ª–∫–∞! –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –≤–∫–∞–∑–∞–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —à–ª—è—Ö (–ü–†.: C:\\Documents\\File.doc)")
        bot.register_next_step_handler(message, files_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'downfile_process' —Å –æ—à–∏–±–∫–æ–π: {action_end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

    end_time = time.time()
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'downfile_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def uploadfile_process(message):
    start_time = time.time()  
    bot.send_chat_action(my_id, 'typing')
    try:
        action_start_time = time.time()
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = message.document.file_name
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        bot.send_message(my_id, "–§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ")
        bot.register_next_step_handler(message, files_process)
        action_end_time = time.time() 
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'uploadfile_process': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        action_end_time = time.time()
        bot.send_message(my_id, "–ü–æ–º–∏–ª–∫–∞! –ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–∞–π–ª —è–∫ –¥–æ–∫—É–º–µ–Ω—Ç")
        bot.register_next_step_handler(message, files_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'uploadfile_process' —Å –æ—à–∏–±–∫–æ–π: {action_end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

    end_time = time.time()
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'uploadfile_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def uploadurl_process(message):
    start_time = time.time()  
    bot.send_chat_action(my_id, 'typing')
    User.urldown = message.text
    bot.send_message(my_id, "–í–∫–∞–∂—ñ—Ç—å —à–ª—è—Ö –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É:")
    bot.register_next_step_handler(message, uploadurl_2process)
    end_time = time.time()
    print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'uploadurl_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def uploadurl_2process(message):
    start_time = time.time()  
    bot.send_chat_action(my_id, 'typing')
    try:
        action_start_time = time.time()
        User.fin = message.text
        obj = SmartDL(User.urldown, User.fin, progress_bar=False)
        obj.start()
        action_end_time = time.time() 
        bot.send_message(my_id, f"–§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –Ω–∞ —à–ª—è—Ö—É \"{User.fin}\"")
        bot.register_next_step_handler(message, files_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'uploadurl_2process': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        action_end_time = time.time()
        bot.send_message(my_id, "–í–∫–∞–∑–∞–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∞–±–æ —à–ª—è—Ö")
        bot.register_next_step_handler(message, addons_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'uploadurl_2process' —Å –æ—à–∏–±–∫–æ–π: {action_end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

    end_time = time.time()
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'uploadurl_2process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def messaga_process(message):
    start_time = time.time()  
    bot.send_chat_action(my_id, 'typing')
    try:
        action_start_time = time.time()
        MessageBox(None, message.text, 'PC TOOL', 0)
        action_end_time = time.time() 
        bot.send_message(my_id, f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ç–µ–∫—Å—Ç–æ–º \"{message.text}\" –±—É–ª–æ –∑–∞–∫—Ä–∏—Ç–æ")
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'messaga_process': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        action_end_time = time.time()
        bot.send_message(my_id, "–ü–æ–º–∏–ª–∫–∞")
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'messaga_process' —Å –æ—à–∏–±–∫–æ–π: {action_end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

    end_time = time.time()
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'messaga_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def mousecurs_settings(message):
    start_time = time.time()  
    bot.send_chat_action(my_id, 'typing')
    try:
        action_start_time = time.time()
        if is_digit(message.text) == True:
            User.curs = int(message.text)
            bot.send_message(my_id, f"–†–æ–∑–º–∞—Ö –∫—É—Ä—Å–æ—Ä—É –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ {str(User.curs)}px", reply_markup = mouse_keyboard)
            bot.register_next_step_handler(message, mouse_process)
        else:
            bot.send_message(my_id, "–í–≤–µ–¥—ñ—Ç—å —Ü—ñ–ª–µ —á–∏—Å–ª–æ: ", reply_markup = mouse_keyboard)
            bot.register_next_step_handler(message, mousecurs_settings)
        action_end_time = time.time() 
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'mousecurs_settings': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        action_end_time = time.time()
        bot.send_message(my_id, "–ü–æ–º–∏–ª–∫–∞! –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è.", reply_markup = mouse_keyboard)
        bot.register_next_step_handler(message, mousecurs_settings)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'mousecurs_settings' —Å –æ—à–∏–±–∫–æ–π: {action_end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

    end_time = time.time()
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'mousecurs_settings': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def screen_process(message):
    start_time = time.time()  
    try:
        action_start_time = time.time()
        get_screenshot()
        bot.send_photo(my_id, open("screen_with_mouse.png", "rb"))
        bot.register_next_step_handler(message, mouse_process)
        os.remove("screen.png")
        os.remove("screen_with_mouse.png")
        action_end_time = time.time() 
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'screen_process': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        action_end_time = time.time()
        bot.send_chat_action(my_id, 'typing')
        bot.send_message(my_id, "–ö–æ–º–ø'—é—Ç–µ—Ä –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ")
        bot.register_next_step_handler(message, mouse_process)
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'screen_process' —Å –æ—à–∏–±–∫–æ–π: {action_end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
    
    end_time = time.time()
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'screen_process': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def get_screenshot():
    start_time = time.time()  
    currentMouseX, currentMouseY = mouse.get_position()
    try:
        action_start_time = time.time()
        img = PIL.ImageGrab.grab()
        img.save("screen.png", "png")
        img = Image.open("screen.png")
        draw = ImageDraw.Draw(img)
        draw.polygon((currentMouseX, currentMouseY, currentMouseX, currentMouseY + 20, currentMouseX + 13, currentMouseY + 13), fill="white", outline="black")
        img.save("screen_with_mouse.png", "PNG")
        action_end_time = time.time() 
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'get_screenshot': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        action_end_time = time.time()
        print(f"–û—à–∏–±–∫–∞ –≤ 'get_screenshot': {e}")
    
    end_time = time.time()
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'get_screenshot': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")

def is_digit(string):
    start_time = time.time()  
    try:
        action_start_time = time.time()
        if string.isdigit():
            result = True
        else:
            try:
                float(string)
                result = True
            except ValueError:
                result = False
        action_end_time = time.time() 
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'is_digit': {action_end_time - action_start_time:.2f} —Å–µ–∫—É–Ω–¥")
    except Exception as e:
        action_end_time = time.time()
        print(f"–û—à–∏–±–∫–∞ –≤ 'is_digit': {e}")
        result = False
    
    end_time = time.time()
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è 'is_digit': {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
    return result


#while True:
#	try:
bot.polling(none_stop=True, interval=0, timeout=20)
#	except Exception as E:
#		print(E.args)
#		time.sleep(2)
